% \iffalse meta-comment
%
% Copyright (C) 2006-2008 by
%    Joseph Wright <joseph.wright@morningstar2.co.uk>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3c of this license or (at your option) any later
% version. The latest version of this license is in
%    http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The current maintainer of this work is Joseph Wright.
%
% This work consists of the source file rsc.dtx
%                 and the derived files rsc.ins,
%                                       rsc.sty,
%                                       rsc.bst,
%                                       angew.bst,
%                                       jawltxdoc.sty,
%                                       rsc-manual.pdf and
%                                       rsc.pdf
%
% TDS-ready files:
%    The compressed file rsc.tds.zip contains an unpacked version of
%    all of the files included here, and pre-compiled documentation
%    in PDF format.  Simply decompress rsc.tds.dtx in your local TeX
%    directory, run your hash program (texhash, initexmf
%    --update-fndb, etc.) and everything will be ready to go.  The
%    user documentation for the package is called rsc-manual.pdf; the
%    file rsc.pdf includes the user manual and the full source code.
%
% Unpacking:
%    (a) If rsc.ins is present:
%           tex rsc.ins
%    (b) Without rsc.ins:
%           tex rsc.dtx
%    (c) If you use LaTeX to generate files:
%           latex \let\install=y\input{rsc.dtx}
%
% Documentation:
%    (a) Without write18 enabled:
%          pdflatex rsc.dtx
%          bibtex8 --wolfgang rsc
%          makeindex -s gind.ist rsc.idx
%          makeindex -s gglo.ist -o rsc.gls rsc.glo
%          pdflatex rsc.dtx
%          pdflatex rsc.dtx
%    (b) With write18 enabled:
%          pdflatex rsc.dtx
%          pdflatex rsc.dtx
%          pdflatex rsc.dtx
%
% Installation:
%     Copy rsc.sty and the two .bst files to a location searched by
%     TeX, and if required by your TeX installation, run the
%     appropriate command to build a hash of files (texhash, initexmf
%     --update-fndb, etc.)
%
% Note:
%     The jawltxdoc.sty file is not needed for installation, only for
%     building the documentation; it may be deleted after producing
%     the documentation (if necessary).
%
%<*ignore>
% This is all taken verbatim from Heiko Oberdiek's packages
\begingroup
  \def\x{LaTeX2e}%
\expandafter\endgroup
\ifcase 0\ifx\install y1\fi\expandafter
         \ifx\csname processbatchFile\endcsname\relax\else1\fi
         \ifx\fmtname\x\else 1\fi\relax
\else\csname fi\endcsname
%</ignore>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
 ----------------------------------------------------------------
 The rsc package --- BibTeX styles for Royal Society of Chemistry
 and Wiley journals
 Maintained by Joseph Wright
 E-mail: joseph.wright@morningstar2.co.uk
 Released under the LaTeX Project Public License v1.3c or later
 See http://www.latex-project.org/lppl.txt
 ----------------------------------------------------------------

\endpreamble
\Msg{Generating rsc files:}
\generate{\file{jawltxdoc.sty}{\from{\jobname.dtx}{jawltxdoc}}
}
\usedir{tex/latex/rsc}
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
\usedir{source/latex/rsc}
\generate{\file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopostamble
\usedir{bibtex/bst/rsc}
\generate{\file{rsc.bst}{\from{rsc.dtx}{bib,rsc}}
          \file{angew.bst}{\from{rsc.dtx}{bib,angew}}
}
\nopreamble\nopostamble
\usedir{doc/latex/rsc}
\generate{\file{README.txt}{\from{\jobname.dtx}{readme}}
          \file{\jobname.bib}{\from{\jobname.dtx}{refs}}
}
\endbatchfile
%</install>
%<*readme>
----------------------------------------------------------------
The rsc package --- BibTeX styles for Royal Society of Chemistry
and Wiley journals
Maintained by Joseph Wright
E-mail: joseph.wright@morningstar2.co.uk
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

The rsc package provides BibTeX style files to produce
bibliographies in accordance with the guidelines of the Royal
Society of Chemistry and Wiley chemistry-related journals. The
styles require the use of natbib and mciteplus.  In addition, a
short LaTeX package is included; this provides a convenient
user interface to the customisation hooks made available by the
BibTeX styles.
%</readme>
%<*ignore>
\fi
% Will Robertson's trick
\immediate\write18{bibtex8 --wolfgang \jobname}
\immediate\write18{makeindex -s gglo.ist -o \jobname.gls  \jobname.glo}
\immediate\write18{makeindex -s gglo.ist -o \jobname.gls  \jobname.glo}
%</ignore>
%<*driver>
\PassOptionsToClass{a4paper}{article}
\documentclass[german,english,UKenglish]{ltxdoc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
%\OnlyDescription
\usepackage{jawltxdoc}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%\CheckSum{118}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%\GetFileInfo{\jobname.sty}
%
%\changes{v1.0}{2006/11/08}{Initial release of packaged
%  \file{rsc.bst}}
%\changes{v2.0}{2007/07/21}{First re-write of package}
%\changes{v3.0}{2008/07/20}{Second re-write of package}
%
%\setkeys{lst}{language=[LaTeX]{TeX},moretexcs={citet,
%  citeyear,citeauthor}}
%
%\title{\currpkg\ --- \texorpdfstring{\BibTeX}{BibTeX} styles for
%  Royal Society of Chemistry and Wiley journals^^A
%  \thanks{This file describes version \fileversion, last revised
%    \filedate.}}
%\author{Joseph Wright^^A
%  \thanks{E-mail: joseph.wright@morningstar2.co.uk}}
%\date{Released \filedate}
%
%\maketitle
%
%\begin{abstract}
% The \currpkg package provides \BibTeX\ style files to produce
% bibliographies in accordance with the guidelines of the Royal
% Society of Chemistry and Wiley chemistry-related journals. The
% styles require the use of \pkg{natbib} and \pkg{mciteplus}.  In
% addition, a short \LaTeX\ package is included; this provides a
% convenient user interface to the customisation hooks made available
% by the \BibTeX\ styles.
%\end{abstract}
%
%\begin{multicols}{2}
%  \tableofcontents
%\end{multicols}
%
%\section{Introduction}
% Although synthetic chemists do not, in the main, use \LaTeX\ for
% the preparation of journal articles, it would be nice to be able to
% use it for reports.  The package \pkg{achemso} provides for a
% \BibTeX\ style and other support for reports in the style of the
% American Chemical Society.  The aim of the \currpkg package is to
% provide similar support for the style favoured by the Royal Society
% of Chemistry.  The package also provides support for the style used
% in Wiley-published journals.
%
% As of version 3, this bundle requires the use of \pkg{natbib} and
% \pkg{mciteplus}.  These two packages make creating bibliographies
% much easier for chemists.  As both require correctly-designed
% \BibTeX\ styles, providing versions supporting different combinations
% had become error-prone and confusing.
%
%\section{Using the styles}
% The styles are used in the normal way for \BibTeX\ styles, as the
% argument to the \cs{bibliographystyle} macro.  As both \pkg{natbib}
% and \pkg{mciteplus} are required, these must of course be loaded.
% Citations can then be given as normal:
%\begin{LaTeXexample}
%  Some standard citations
%    \cite{Abernethy2003,Cotton1999}.\\
%  A multiple citation
%    \cite{Arduengo1992,*Arduengo1994}.\\
%  Some \textsf{natbib}-specific features:
%    \citet{Abernethy2003} have said something,
%    as reported by \citeauthor{Cotton1999},
%    in \citeyear{Arduengo1992}.
%\end{LaTeXexample}
% To make life slightly easier for the user, a small \LaTeX\ package
% accompanies the \BibTeX\ files.  It automatically loads the support
% packages, and handles customisation (see the next section).
%\begin{LaTeXexample}[noexample]
%  \documentclass{article}
%  \usepackage{rsc}
%  \begin{document}
%  % Document body here
%  \bibliographystyle{rsc} % or angew
%  \bibliography{your-bibtex-database}
%  \end{document}
%\end{LaTeXexample}
%
%\section{Customising the styles: the \texorpdfstring{\LaTeX}{LaTeX}
%  package}
% Both of the styles provide a small number of control hooks to
% modify the output behaviour.  These can be altered directly, using
% a mechanism similar to that used by \pkg{IEEEtrans}.  However, for
% most users, this is overly complex.  A short \LaTeX\ package is
% therefore provided, which provides high-level access to the
% customisation.
%
%\DescribeOption{maxnames}
%\DescribeOption{usetitle}
%\DescribeOption{usedoi}
% The \opt{maxnames} option sets whether and when a long list of
% authors is truncated, and takes an integer value.  Giving the value
% \opt{0} means that no truncation occurs, otherwise the list is
% truncated if the number of names exceeds the given value.  The
% \opt{usetitle} and \opt{usedoi} options are simple Boolean
% switches.  The \opt{usetitle} option sets whether to include the
% titles of journal articles in the bibliography.  The default is
% \opt{false}; the only \textsc{rsc} journal using article titles is
% \emph{Photochemical \& Photobiological Sciences}. The \opt{usedoi}
% option forces the use of \textsc{doi} information in cases where it
% would not normally be present (for example journal articles with
% page ranges available). This is intended to make it easier for
% readers to find journal information.
%
%\DescribeOption{super}
% The \opt{super} Boolean option turns on superscript citations, and
% is \opt{true} by default.  It also causes the \pkg{natmove} package
% to be loaded if available (\pkg{natmove} is part of the
% \pkg{achemso} bundle).  This ensures that citations appear
% \emph{after} punctuation even if given before in the text.  This
% documentation has been compiled using \pkg{natmove}: see the input
% of the example citations in the previous section.
%
%\bibliographystyle{rsc}
%\StopEventually{%
%  \PrintChanges
%  \PrintIndex
%  \bibliography{rsc}}
%
%\iffalse
%<*package>
%\fi
%
%\section{The \texorpdfstring{\LaTeX}{LaTeX} source}
% The package starts with the usual identification.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{rsc}
  [2008/08/27 v3.0 Support for RSC and Wiley journals]
\RequirePackage{mciteplus,kvoptions}
%    \end{macrocode}
%\begin{macro}{\ifrsc@super}
%\begin{macro}{\ifrsc@usetitle}
%\begin{macro}{\ifrsc@usedoi}
%\begin{macro}{\rsc@maxauthors}
% To make life easier for the user, the control values for the
% bibliography are converted into \LaTeX\ package options using
% \pkg{kvoptions}.
%    \begin{macrocode}
\SetupKeyvalOptions{
  family = rsc,
  prefix = rsc@}
\DeclareBoolOption{super}
\DeclareBoolOption{usetitle}
\DeclareBoolOption{usedoi}
\DeclareStringOption{maxauthors}
\setkeys{rsc}{
  maxauthors = 0,
  usetitle = false,
  usedoi = false,
  super = true}
\ProcessKeyvalOptions{rsc}
%    \end{macrocode}
%\end{macro}
%\end{macro}
%\end{macro}
%\end{macro}
%\begin{macro}{\rsc@prefix}
%\begin{macro}{\rsc@msg}
% Some set up work is carried out for writing to the control
% bibliography.
%    \begin{macrocode}
\newcommand*{\rsc@prefix}{rsc-}
\edef\rsc@msg{%
  This is an auxiliary file used by the `rsc' package.^^J%
  This file may safely be deleted. It will be recreated as
  required.^^J}
%    \end{macrocode}
%\end{macro}
%\end{macro}
%\begin{macro}{\rsc@out}
%\begin{macro}{\rsc@stream}
% Assuming files are being written, the control values are placed in
% the control \BibTeX\ database.
%    \begin{macrocode}
\if@filesw
  \newwrite\rsc@out
  \newcommand*\rsc@stream{\rsc@prefix\jobname.bib}%
  \immediate\openout\rsc@out\rsc@stream\relax
  \immediate\write\rsc@out{\rsc@msg}%
  \edef\@tempa#1#2{\space\space#1\space=\space"#2",^^J}%
  \immediate\write\rsc@out{%
    @Control\string{rsc-control,^^J%
    \@tempa{ctrl-use-title}{\ifrsc@usetitle yes\else no\fi}%
    \@tempa{ctrl-etal-number}{\rsc@maxauthors}%
    \@tempa{ctrl-use-doi-all}{\ifrsc@usedoi yes\else no\fi}%
    \string}^^J}%
\fi
%    \end{macrocode}
%\end{macro}
%\end{macro}
%\begin{macro}{\rsc@bibliography}
%\begin{macro}{\bibliography}
% Finally, the control database and a suitable citation are added to
% the document body.  The citation has to come right at the end of
% the \cs{document} macro.
%    \begin{macrocode}
\AtBeginDocument{
  \let\rsc@bibliography\bibliography
  \renewcommand*{\bibliography}[1]{%
    \rsc@bibliography{\rsc@prefix\jobname,#1}}}
\g@addto@macro{\document}{%
  \if@filesw
    \immediate\write\@auxout{%
      \string\citation\string{rsc-control\string}}%
  \fi}
%    \end{macrocode}
%\end{macro}
%\end{macro}
% Citation support is loaded.
%    \begin{macrocode}
\ifrsc@super
  \RequirePackage[sort&compress,numbers,super]{natbib}
  \IfFileExists{natmove.sty}
    {\RequirePackage{natmove}}
    {}
\else
  \RequirePackage[sort&compress,numbers]{natbib}
\fi
%    \end{macrocode}
%
%\iffalse
%</package>
%<*bib>
%\fi
%\section{The \texorpdfstring{\BibTeX}{BibTeX} source}
% Very little of the \BibTeX\ source is very exciting, with
% most of it taken from the standard classes, the \pkg{natbib} and
% \pkg{mciteplus} classes or \emph{Tame the BeaST}.
%    \begin{macrocode}
ENTRY
  { address
    author
    booktitle
    chapter
%    \end{macrocode}
% The next three entries are used to allow formatting control, in
% the style of \pkg{biblatex}.
%    \begin{macrocode}
    ctrl-use-title
    ctrl-etal-number
    ctrl-use-doi-all
    doi
    edition
    editor
    howpublished
    institution
    journal
    key
    note
    number
    organization
    pages
    publisher
    school
    series
    title
    type
    url
    volume
    year
  }
  {}
  { label
    extra.label
    short.list
  }

INTEGERS { output.state before.all mid.sentence }
INTEGERS { after.sentence after.block after.item }
INTEGERS { author.or.editor }

FUNCTION {init.state.consts}
{ #0 'before.all :=
  #1 'mid.sentence :=
  #2 'after.sentence :=
  #3 'after.block :=
  #4 'after.item :=
}

%    \end{macrocode}
% Using a trick from \pkg{biblatex}, some integers are made available
% to control some formatting aspects without needing a new style.
%    \begin{macrocode}
INTEGERS { is.use.title etal.number use.doi.all }

%    \end{macrocode}
% A simple Boolean switch for controlling title output.
%    \begin{macrocode}
FUNCTION {default.is.use.title} { #0 }

%    \end{macrocode}
% The number of names that force ``\emph{et al.}'' to be used
%If set to 0, all names are displayed
%    \begin{macrocode}
FUNCTION {default.etal.number} { #0 }

%    \end{macrocode}
% A simple Boolean switch for controlling DOI printing for normal
% entries.
%    \begin{macrocode}
FUNCTION {default.use.doi.all} { #0 }

FUNCTION {add.comma}
{ ", " * }

STRINGS { s t }

FUNCTION {output.nonnull}
{ 's :=
  output.state mid.sentence =
    { add.comma write$ }
    { output.state after.block =
      { add.comma write$
        newline$
        "\newblock " write$
      }
      { output.state before.all =
          'write$
          { output.state after.item =
            { " " * write$ }
            { add.period$ " " * write$ }
          if$
          }
        if$
        }
      if$
      mid.sentence 'output.state :=
    }
  if$
  s
}

FUNCTION {output}
{ duplicate$ empty$
    'pop$
    'output.nonnull
  if$
}

FUNCTION {output.check}
{ 't :=
  duplicate$ empty$
    { pop$ "Empty " t * " in " * cite$ * warning$ }
    'output.nonnull
  if$
}

%    \end{macrocode}
% Some functions taken more or less verbatim from \pkg{mciteplus}.
%    \begin{macrocode}
INTEGERS { would.add.period.textlen }

FUNCTION {would.add.period}
{ duplicate$
  add.period$
  text.length$
  'would.add.period.textlen :=
  duplicate$
  text.length$
  would.add.period.textlen =
    { #0 }
    { #1 }
  if$
}

FUNCTION {fin.entry}
{ would.add.period
    { "\relax" * write$ newline$
      "\mciteBstWouldAddEndPuncttrue" write$ newline$
      "\mciteSetBstMidEndSepPunct{\mcitedefaultmidpunct}"
      write$ newline$
      "{\mcitedefaultendpunct}{\mcitedefaultseppunct}\relax"
    }
    { "\relax" * write$ newline$
      "\mciteBstWouldAddEndPunctfalse" write$ newline$
      "\mciteSetBstMidEndSepPunct{\mcitedefaultmidpunct}"
      write$ newline$
      "{}{\mcitedefaultseppunct}\relax"
    }
  if$
  write$
  newline$
  "\EndOfBibitem" write$
}

FUNCTION {not}
{   { #0 }
    { #1 }
  if$
}

FUNCTION {and}
{   'skip$
    { pop$ #0 }
  if$
}

FUNCTION {or}
{   { pop$ #1 }
    'skip$
  if$
}

FUNCTION {field.or.null}
{ duplicate$ empty$
    { pop$ "" }
    'skip$
  if$
}

FUNCTION {emphasize}
{ duplicate$ empty$
    { pop$ "" }
    { "\emph{" swap$ * "}" * }
  if$
}

FUNCTION {boldface}
{ duplicate$ empty$
    { pop$ "" }
    { "\textbf{" swap$ * "}" * }
  if$
}

FUNCTION {paren}
{ duplicate$ empty$
    { pop$ "" }
    { "(" swap$ * ")" * }
  if$
}

%    \end{macrocode}
% Using independent strings makes editing easier.  Here, a number of
% variations between the RSC and Wiley styles show up.
%    \begin{macrocode}
FUNCTION {bbl.and}
{ "and" }

FUNCTION {bbl.chapter}
%<rsc>{ "ch." }
%<angew>{ "Chapter" }

FUNCTION {bbl.doi}
%<rsc>{ "DOI:" }
%<angew>{ "DOI" }

FUNCTION {bbl.editor}
%<rsc>{ "ed." }
%<angew>{ "Ed.:" }

%<angew>FUNCTION {bbl.editors}
%<angew>{ "Eds.:" }

FUNCTION {bbl.edition}
%<rsc>{ "edn." }
%<angew>{ "ed." }

FUNCTION {bbl.etal}
{ "et~al." emphasize }

FUNCTION {bbl.in}
{ "in" }

FUNCTION {bbl.inpress}
{ "in press" }


FUNCTION {bbl.msc}
%<rsc>{ "M.Sc. thesis" }
%<angew>{ "MSc thesis" }

FUNCTION {bbl.page}
{ "p." }

FUNCTION {bbl.pages}
{ "pp." }

FUNCTION {bbl.phd}
%<rsc>{ "Ph.D. thesis" }
%<angew>{ "PhD thesis" }

FUNCTION {bbl.submitted}
{ "submitted for publication" }

FUNCTION {bbl.techreport}
{ "Technical Report" }

FUNCTION {bbl.volume}
%<rsc>{ "vol." }
%<angew>{ "Vol." }

FUNCTION {bbl.first}
{ "1st" }

FUNCTION {bbl.second}
{ "2nd" }

FUNCTION {bbl.third}
{ "3rd" }

FUNCTION {bbl.fourth}
{ "4th" }

FUNCTION {bbl.fifth}
{ "5th" }

FUNCTION {bbl.st}
{ "st" }

FUNCTION {bbl.nd}
{ "nd" }

FUNCTION {bbl.rd}
{ "rd" }

FUNCTION {bbl.th}
{ "th" }

FUNCTION {eng.ord}
{ duplicate$ "1" swap$ *
  #-2 #1 substring$ "1" =
     { bbl.th * }
     { duplicate$ #-1 #1 substring$
       duplicate$ "1" =
         { pop$ bbl.st * }
         { duplicate$ "2" =
             { pop$ bbl.nd * }
             { "3" =
                 { bbl.rd * }
                 { bbl.th * }
               if$
             }
           if$
          }
       if$
     }
   if$
}

%    \end{macrocode}
% A search and replace system taken from \emph{Tame the BeaST}.
%    \begin{macrocode}
INTEGERS{ l }

FUNCTION{string.length}
{ #1 'l :=
  { duplicate$ duplicate$ #1 l substring$ = not }
    { l #1 + 'l := }
  while$
  pop$ l
}

STRINGS{replace find text}

INTEGERS{find_length}

FUNCTION{find.replace}
{ 'replace :=
  'find :=
  'text :=
  find  string.length 'find_length :=
  ""
  { text empty$ not }
    { text #1 find_length substring$ find =
      { replace *
        text #1 find_length + global.max$ substring$ 'text :=
      }
      { text #1 #1 substring$ *
        text #2 global.max$ substring$ 'text :=
      }
      if$
    }
  while$
}

%    \end{macrocode}
% Also some checks on whether a ``string'' is really a number.
%    \begin{macrocode}
FUNCTION {chr.to.value}
{ chr.to.int$ #48 -
  duplicate$ duplicate$
  #0 < swap$ #9 > or
    { #48 + int.to.chr$
      " is not a number..." *
      warning$
     pop$ #0
    }
    {}
  if$
}

FUNCTION{is.a.digit}
{ duplicate$ "" =
    {pop$ #0}
    {chr.to.int$ #48 - duplicate$
     #0 < swap$ #9 > or not}
  if$
}

FUNCTION{is.a.number}
{
  { duplicate$ #1 #1 substring$ is.a.digit }
    {#2 global.max$ substring$}
  while$
  "" =
}

FUNCTION {extract.num}
{ duplicate$ 't :=
  "" 's :=
  { t empty$ not }
  { t #1 #1 substring$
    t #2 global.max$ substring$ 't :=
    duplicate$ is.a.number
      { s swap$ * 's := }
      { pop$ "" 't := }
    if$
  }
  while$
  s empty$
    'skip$
    { pop$ s }
  if$
}

FUNCTION {bibinfo.check}
{ swap$
  duplicate$ missing$
    { pop$ pop$
      ""
    }
    { duplicate$ empty$
        {
          swap$ pop$
        }
        { swap$
          pop$
        }
      if$
    }
  if$
}

FUNCTION {convert.edition}
{ extract.num "l" change.case$ 's :=
  s "first" = s "1" = or
    { bbl.first 't := }
    { s "second" = s "2" = or
        { bbl.second 't := }
        { s "third" = s "3" = or
            { bbl.third 't := }
            { s "fourth" = s "4" = or
                { bbl.fourth 't := }
                { s "fifth" = s "5" = or
                    { bbl.fifth 't := }
                    { s #1 #1 substring$ is.a.number
                        { s eng.ord 't := }
                        { edition 't := }
                      if$
                    }
                  if$
                }
              if$
            }
          if$
        }
      if$
    }
  if$
  t
}

FUNCTION {tie.or.space.connect}
{ duplicate$ text.length$ #3 <
    { "~" }
    { " " }
  if$
  swap$ * *
}

FUNCTION {space.connect}
{ " " swap$ * * }

INTEGERS { nameptr namesleft numnames }

FUNCTION {format.names}
{ 's :=
  #1 'nameptr :=
  s num.names$ 'numnames :=
  numnames 'namesleft :=
%    \end{macrocode}
% Names are truncated if there are more than |etal.number|, and it is
% not set to zero.
%    \begin{macrocode}
  numnames etal.number > etal.number #0 > and
    { s #1 "{f.~}{vv~}{ll}{, jj}" format.name$ 't :=
      t bbl.etal space.connect
    }
    {
      { namesleft #0 > }
        { s nameptr "{f.~}{vv~}{ll}{, jj}" format.name$ 't :=
          nameptr #1 >
            { namesleft #1 >
              { add.comma t * }
              { numnames #2 >
                { "" * }
                'skip$
              if$
              t "others" =
                { bbl.etal space.connect }
%<rsc>                { bbl.and space.connect t space.connect }
%<angew>                { add.comma t * }
              if$
              }
            if$
            }
          't
        if$
        nameptr #1 + 'nameptr :=
        namesleft #1 - 'namesleft :=
        }
    while$
  }
  if$
}

FUNCTION {format.authors}
{ author empty$
    { "" }
    { #1 'author.or.editor :=
      author format.names }
  if$
}

%    \end{macrocode}
% The |strip.comma| function is used to ``unwind'' the comma added by
% |output.nonnull|, so that editors in brackets are easy to do.  This
% is needed for the Wiley style.
%    \begin{macrocode}
FUNCTION {strip.comma}
{ duplicate$
  string.length 'find_length :=
  duplicate$
  find_length #1 - #1 substring$
  "," =
    { #1 find_length #2 - substring$
      " " *
    }
    'skip$
  if$
}

FUNCTION {format.editors}
{ editor empty$
    { "" }
    { #2 'author.or.editor :=
%<rsc>      bbl.editor " " * *
%<rsc>      editor format.names
%<angew>      strip.comma
%<angew>      editor num.names$ #1 >
%<angew>        { bbl.editors }
%<angew>       { bbl.editor }
%<angew>      if$
%<angew>      " " *
%<angew>      editor format.names * paren
    }
  if$
}

FUNCTION {format.doi}
{ use.doi.all
    { doi empty$
        { bbl.doi doi tie.or.space.connect output }
        'skip$
      if$
    }
    'skip$
  if$
}

%    \end{macrocode}
% |n.separate| is given in the \pkg{custom-bib} package.  The
% following function is modified to separate out a number of any
% length into digit groups, \eg~12345 turns into 12\,345, 1234567 in
% 1\,234\,567 but 1234 or a12345 are left alone.
%    \begin{macrocode}
FUNCTION {n.separate.multi}
{ 't :=
  ""
  #0 'numnames :=
%    \end{macrocode}
% This is the key line: the test is that the sting is both
% at least 5 digits long and is an integer.
%    \begin{macrocode}
  t text.length$ #4 > t is.a.number and
    {
      { t empty$ not }
      { t #-1 #1 substring$ is.a.number
          { numnames #1 + 'numnames := }
          { #0 'numnames := }
        if$
        t #-1 #1 substring$ swap$ *
        t #-2 global.max$ substring$ 't :=
        numnames #4 =
          { duplicate$ #1 #1 substring$ swap$
            #2 global.max$ substring$
            "\," swap$ * *
            #1 'numnames :=
          }
          'skip$
        if$
      }
      while$
    }
    { t swap$ * }
  if$
}

FUNCTION {format.bvolume}
{ volume empty$
    { "" }
    { bbl.volume volume tie.or.space.connect }
  if$
}

FUNCTION {format.title.noemph}
{ 't :=
  t empty$
    { "" }
    { t }
  if$
}

FUNCTION {format.title}
{ 't :=
  t empty$
    { "" }
    { t emphasize }
  if$
}

FUNCTION {format.url}
{ url empty$
    { "" }
    { "\url{" url * "}" * }
  if$
}

FUNCTION {format.title.vol}
{ 't :=
  t empty$
    { "" }
    { t emphasize }
  if$
  volume empty$
    'skip$
    { format.bvolume emphasize
      swap$ add.comma swap$ *
    }
  if$
  }

FUNCTION {format.full.names}
{'s :=
  #1 'nameptr :=
  s num.names$ 'numnames :=
  numnames 'namesleft :=
    { namesleft #0 > }
    { s nameptr
      "{vv~}{ll}" format.name$ 't :=
      nameptr #1 >
        {
          namesleft #1 >
            { ", " * t * }
            {
              numnames #2 >
                { "," * }
                'skip$
              if$
              t "others" =
                { bbl.etal * }
                { bbl.and space.connect t space.connect }
              if$
            }
          if$
        }
        't
      if$
      nameptr #1 + 'nameptr :=
      namesleft #1 - 'namesleft :=
    }
  while$
}

FUNCTION {author.editor.full}
{ author empty$
    { editor empty$
        { "" }
        { editor format.full.names }
      if$
    }
    { author format.full.names }
  if$
}

FUNCTION {author.full}
{ author empty$
    { "" }
    { author format.full.names }
  if$
}

FUNCTION {editor.full}
{ editor empty$
    { "" }
    { editor format.full.names }
  if$
}

FUNCTION {make.full.names}
{ type$ "book" =
  type$ "inbook" =
  or
    'author.editor.full
    { type$ "proceedings" =
        'editor.full
        'author.full
      if$
    }
  if$
}

FUNCTION {output.bibitem} { newline$
  "\bibitem[" write$
  label write$
  ")" make.full.names duplicate$ short.list =
     { pop$ }
     { * }
   if$
  "]{" * write$
  cite$ write$
  "}" write$
  newline$
  ""
  before.all 'output.state :=
}

FUNCTION {n.dashify} { 't :=
  ""
    { t empty$ not }
    { t #1 #1 substring$ "-" =
    { t #1 #2 substring$ "--" = not
        { "--" *
          t #2 global.max$ substring$ 't :=
        }
        {   { t #1 #1 substring$ "-" = }
        { "-" *
          t #2 global.max$ substring$ 't :=
        }
          while$
        }
      if$
    }
    { t #1 #1 substring$ *
      t #2 global.max$ substring$ 't :=
    }
      if$
    }
  while$
}

FUNCTION {format.date}
{ year empty$
    { "" }
%<rsc>    'year
%<angew>    { year boldface }
  if$
}

FUNCTION {format.bdate}
{ year empty$
    { "There's no year in " cite$ * warning$ }
%<rsc>    'year
%<angew>    { year boldface }
  if$
}

FUNCTION {either.or.check}
{ empty$
    'pop$
    { "Can't use both " swap$ * " fields in "
      * cite$ * warning$ }
  if$
}

FUNCTION {format.edition}
{ edition duplicate$ empty$
    'skip$
    { convert.edition
      bbl.edition bibinfo.check
      " " * bbl.edition *
    }
  if$
}

INTEGERS { multiresult }

FUNCTION {multi.page.check}
{ 't :=
  #0 'multiresult :=
    { multiresult not
      t empty$ not
      and
    }
    { t #1 #1 substring$
      duplicate$ "-" =
      swap$ duplicate$ "," =
      swap$ "+" =
      or or
        { #1 'multiresult := }
        { t #2 global.max$ substring$ 't := }
      if$
    }
  while$
  multiresult
}

FUNCTION {format.pages}
{ pages empty$
    { "" }
    { pages multi.page.check
      { bbl.pages pages n.dashify tie.or.space.connect }
      { bbl.page pages tie.or.space.connect }
    if$
    }
  if$
}

FUNCTION {format.pages.required}
{ pages empty$
    { ""
      "There are no page numbers for " cite$ * warning$
      output
    }
    { pages multi.page.check
      { bbl.pages pages n.dashify tie.or.space.connect }
      { bbl.page pages tie.or.space.connect }
    if$
    }
  if$
}

FUNCTION {format.pages.nopp}
{ pages empty$
    { ""
      "There are no page numbers for " cite$ * warning$
      output
    }
    { pages multi.page.check
      { pages n.dashify space.connect }
      { pages space.connect }
    if$
    }
  if$
}

FUNCTION {format.pages.patent}
{ pages empty$
    { "There is no patent number for " cite$ * warning$ }
    { pages multi.page.check
      { pages n.dashify }
%<rsc>      { pages n.separate.multi }
%<angew>      { pages }
      if$
    }
  if$
}

FUNCTION {format.vol.pages}
%<rsc>{ volume boldface field.or.null
%<angew>{ volume emphasize field.or.null
  duplicate$ empty$
    { pop$ format.pages.required }
    { add.comma pages n.dashify * }
  if$
}

FUNCTION {format.chapter.pages}
{ chapter empty$
    'format.pages
    { type empty$
    { bbl.chapter }
    { type "l" change.case$ }
      if$
      chapter tie.or.space.connect
      pages empty$
    'skip$
    { add.comma format.pages * }
      if$
    }
  if$
}

FUNCTION {format.title.in}
{ 's :=
%<angew>  after.item 'output.state :=
  s empty$
    { "" }
    { editor empty$
      { bbl.in s format.title space.connect }
      { bbl.in s format.title space.connect
      add.comma format.editors *
      }
    if$
    }
  if$
}

FUNCTION {format.title.vol.in}
{ 's :=
  after.item 'output.state :=
  s empty$
    { "" }
    { editor empty$
      { bbl.in s format.title.vol space.connect }
      { bbl.in s format.title.vol space.connect
      add.comma format.editors *
      }
    if$
    }
  if$
}

FUNCTION {format.pub.address}
{ publisher empty$
    { "" }
    { address empty$
        { publisher }
        { publisher add.comma address *}
      if$
    }
  if$
}

FUNCTION {empty.misc.check}
{ author empty$ title empty$ howpublished empty$
  year empty$ note empty$ url empty$
  and and and and and
    { "all relevant fields are empty in " cite$ * warning$ }
    'skip$
  if$
}

FUNCTION {empty.doi.note}
{ doi empty$ note empty$ and
    { "Need either a note or DOI for " cite$ * warning$ }
    'skip$
  if$
}

FUNCTION {format.thesis.type}
{ type empty$
    'skip$
    { pop$
      type emphasize
    }
  if$
}

FUNCTION {article}
{ output.bibitem
  format.authors "author" output.check
%    \end{macrocode}
% To allow titles to appear in article citations without needing a
% separate \BibTeX\ style file.
%    \begin{macrocode}
  is.use.title
    { title format.title.noemph "title" output.check }
    'skip$
  if$
%<rsc>  journal emphasize "journal" output.check
%<angew>
%<angew>  journal "," "" find.replace emphasize
%<angew>  "journal" output.check
%<angew>  after.item 'output.state :=
  format.date "year" output.check
  volume empty$
    { "" format.pages.nopp output }
    { format.vol.pages output }
  if$
  format.doi
  fin.entry
}

FUNCTION {book}
{ output.bibitem
  author empty$
%<rsc>    { title format.title "title" output.check
%<angew>    { title format.title.vol "title" output.check
      editor empty$
        { "Need either an author or editor for "
          cite$ * warning$ }
        { "" format.editors * "editor" output.check }
      if$
    }
    { format.authors output
      "author and editor" editor either.or.check
%<rsc>      title format.title "title" output.check
%<angew>      title format.title.vol "title" output.check
    }
  if$
  format.pub.address "publisher" output.check
  format.edition output
  format.bdate "year" output.check
%<rsc>  format.bvolume output
  pages empty$
    'skip$
    { format.pages output }
  if$
  format.doi
  fin.entry
}

FUNCTION {booklet}
{ output.bibitem
  format.authors output
  title format.title "title" output.check
  howpublished output
  address output
  format.date output
  format.doi
  fin.entry
}

FUNCTION {inbook}
{ output.bibitem
  author empty$
%<rsc>    { title format.title "title" output.check
%<angew>    { title format.title.vol "title" output.check
      editor empty$
      { "Need at least an author or an editor for "
        cite$ * warning$ }
      { "" format.editors * "editor" output.check }
    if$
    }
    { format.authors output
%<rsc>      title format.title.in "title" output.check
%<angew>      title format.title.vol.in "title" output.check
    }
  if$
  format.pub.address "publisher" output.check
  format.edition output
  format.bdate "year" output.check
%<rsc>  format.bvolume output
  format.chapter.pages "chapter and pages" output.check
  format.doi
  fin.entry
}

FUNCTION {incollection}
{ output.bibitem
  author empty$
    { booktitle
%<rsc>      format.title
%<angew>      format.title.vol
      "booktitle" output.check
      editor empty$
        { "Need at least an author or an editor for "
          cite$ * warning$ }
        { "" format.editors * "editor" output.check }
      if$
    }
    { format.authors output
      booktitle
%<rsc>      format.title
%<angew>      format.title.vol
      "booktitle" output.check
    }
  if$
  format.pub.address "publisher" output.check
  format.edition output
  format.bdate "year" output.check
%<rsc>  format.bvolume output
  format.chapter.pages "chapter and pages" output.check
  format.doi
  fin.entry
}

FUNCTION {inpress}
{ output.bibitem
  format.authors "author" output.check
  journal emphasize "journal" output.check
  bbl.inpress output
  format.doi
  fin.entry
}

FUNCTION {inproceedings}
{ output.bibitem
  format.authors "author" output.check
%<rsc>  booktitle format.title.noemph "booktitle" output.check
%<angew>  booktitle format.title "booktitle" output.check
  address output
  format.date "year" output.check
  pages empty$
    'skip$
    { format.pages output }
  if$
  format.doi
  fin.entry
}

FUNCTION {manual}
{ output.bibitem
  author empty$
    { organization empty$
      'skip$
      { organization output
        address output
      }
      if$
    }
    { format.authors output }
  if$
%<rsc>  title format.title "title" output.check
%<angew>  title format.title.noemph "title" output.check
  author empty$
    { organization empty$
      { address output }
      'skip$
    if$
    }
    { organization output
      address output
    }
  if$
  format.edition output
  format.date output
  format.doi
  fin.entry
}

FUNCTION {mastersthesis}
{ output.bibitem
  format.authors "author" output.check
%<rsc>  bbl.msc emphasize format.thesis.type output
%<angew>  bbl.msc format.thesis.type output
  school "school" output.check
  address output
  format.date "year" output.check
  format.doi
  fin.entry
}

FUNCTION {misc}
{ output.bibitem
  format.authors output
  title empty$
    'skip$
    { title format.title output }
  if$
  howpublished output
%<rsc>  year output
%<angew>  format.date output
  format.url output
  note output
  format.doi
  fin.entry
  empty.misc.check
}

FUNCTION {patent}
{ output.bibitem
  organization empty$
    { format.authors "author and organization" output.check }
    { author empty$
        { organization }
        {  format.authors organization paren space.connect }
      if$
      "author and organization" output.check
    }
  if$
  journal emphasize "journal" output.check
  format.pages.patent "pages" output.check
  format.date "year" output.check
  format.doi
  fin.entry
}

FUNCTION {phdthesis}
{ output.bibitem
  format.authors "author" output.check
%<rsc>  bbl.phd emphasize format.thesis.type output
%<angew>  bbl.phd format.thesis.type output
  school "school" output.check
  address output
  format.date "year" output.check
  format.doi
  fin.entry
}

FUNCTION {proceedings}
{ output.bibitem
%<rsc>  title format.title.noemph "title" output.check
%<angew>  title format.title "title" output.check
  address output
  format.date "year" output.check
  pages empty$
    'skip$
    { format.pages output }
  if$
  format.doi
  fin.entry
}

FUNCTION {techreport}
{ output.bibitem
  format.authors "author" output.check
  title format.title "title" output.check
  institution
  type empty$
    'bbl.techreport
    'type
  if$
  space.connect
  number empty$
    { "t" change.case$ }
    { number tie.or.space.connect }
  if$
  output
  format.pub.address output
  format.date "year" output.check
  format.doi
  fin.entry
}

FUNCTION {unpublished}
{ output.bibitem
  format.authors "author" output.check
  journal empty$
    'skip$
    { journal emphasize "journal" output.check }
  if$
  doi empty$
    {  note output }
    {
%<rsc>       format.date output
       bbl.doi doi tie.or.space.connect output
   }
  if$
  fin.entry
  empty.doi.note
}

%    \end{macrocode}
% Using the same mechanism as in \pkg{biblatex}, control of output
% can be achieved using a special entry type. The auxiliary macros
% come from \pkg{biblatex} and \emph{Tame the BeaST}.
%    \begin{macrocode}
INTEGERS { a b }

FUNCTION {mult}
{ 'a :=
  'b :=
  b #0 <
    {#-1 #0 b - 'b :=}
    {#1}
  if$
  #0
  {b #0 >}
    { a +
      b #1 - 'b :=
    }
  while$
  swap$
    'skip$
    {#0 swap$ -}
    if$
}

FUNCTION {str.to.int.aux}
{ {duplicate$ empty$ not}
    { swap$ #10 mult 'a :=
      duplicate$ #1 #1 substring$
      chr.to.value a +
      swap$
     #2 global.max$ substring$
    }
  while$
  pop$
}

FUNCTION {str.to.int}
{ duplicate$ #1 #1 substring$ "-" =
    {#1 swap$ #2 global.max$ substring$}
    {#0 swap$}
  if$
  #0 swap$ str.to.int.aux
  swap$
    {#0 swap$ -}
    {}
  if$
}

FUNCTION {yes.no.to.int}
{ "l" change.case$ duplicate$
    "yes" =
    { pop$  #1 }
    { duplicate$ "no" =
        { pop$ #0 }
        { "unknown Boolean " quote$ * swap$ * quote$ *
          " in " * cite$ * warning$
          #0
        }
      if$
    }
  if$
}

FUNCTION {Control}
{ ctrl-use-title
  empty$
    { skip$ }
    { ctrl-use-title
      yes.no.to.int
      'is.use.title := }
  if$
  ctrl-etal-number
  empty$
    { skip$ }
    { ctrl-etal-number
      str.to.int
      'etal.number := }
  if$
  ctrl-use-doi-all
  empty$
    { skip$ }
    { ctrl-use-doi-all
      yes.no.to.int
      'use.doi.all := }
  if$
}

FUNCTION {conference} {inproceedings}

FUNCTION {other} {patent}

FUNCTION {default.type} {misc}

MACRO {jan} {"January"}
MACRO {feb} {"February"}
MACRO {mar} {"March"}
MACRO {apr} {"April"}
MACRO {may} {"May"}
MACRO {jun} {"June"}
MACRO {jul} {"July"}
MACRO {aug} {"August"}
MACRO {sep} {"September"}
MACRO {oct} {"October"}
MACRO {nov} {"November"}
MACRO {dec} {"December"}

READ

%    \end{macrocode}
% Set up the special control entries.
%    \begin{macrocode}
FUNCTION {initialize.controls}
{ default.is.use.title 'is.use.title :=
  default.etal.number 'etal.number :=
  default.use.doi.all 'use.doi.all :=
}

INTEGERS { len }

FUNCTION {chop.word}
{ 's :=
  'len :=
  s #1 len substring$ =
    { s len #1 + global.max$ substring$ }
    's
  if$
}

FUNCTION {format.lab.names}
{ 's :=
  s #1 "{vv~}{ll}" format.name$
  s num.names$ duplicate$
  #2 >
    { pop$ bbl.etal space.connect }
    { #2 <
        'skip$
        { s #2 "{ff }{vv }{ll}{ jj}" format.name$ "others" =
            { bbl.etal space.connect }
            { bbl.and space.connect s #2 "{vv~}{ll}"
              format.name$ space.connect }
          if$
        }
      if$
    }
  if$
}

FUNCTION {author.key.label}
{ author empty$
    { key empty$
        { cite$ #1 #3 substring$ }
        'key
      if$
    }
    { author format.lab.names }
  if$
}

FUNCTION {author.editor.key.label}
{ author empty$
    { editor empty$
        { key empty$
            { cite$ #1 #3 substring$ }
            'key
          if$
        }
        { editor format.lab.names }
      if$
    }
    { author format.lab.names }
  if$
}

FUNCTION {author.key.organization.label}
{ author empty$
    { key empty$
        { organization empty$
            { cite$ #1 #3 substring$ }
            { "The " #4 organization chop.word #3
              text.prefix$ }
          if$
        }
        'key
      if$
    }
    { author format.lab.names }
  if$
}

FUNCTION {editor.key.organization.label}
{ editor empty$
    { key empty$
        { organization empty$
            { cite$ #1 #3 substring$ }
            { "The " #4 organization chop.word #3
              text.prefix$ }
          if$
        }
        'key
      if$
    }
    { editor format.lab.names }
  if$
}

FUNCTION {calc.short.authors}
{ type$ "book" =
  type$ "inbook" =
  or
    'author.editor.key.label
    { type$ "proceedings" =
        'editor.key.organization.label
        { type$ "manual" =
            'author.key.organization.label
            'author.key.label
          if$
        }
      if$
    }
  if$
  'short.list :=
}

FUNCTION {calc.label}
{ calc.short.authors
  short.list
  "("
  *
  year duplicate$ empty$
  short.list key field.or.null = or
     { pop$ "" }
     'skip$
  if$
  *
  'label :=
}

ITERATE {calc.label}

STRINGS { longest.label last.label next.extra }

INTEGERS { longest.label.width last.extra.num number.label }

FUNCTION {initialize.longest.label}
{ "" 'longest.label :=
  #0 int.to.chr$ 'last.label :=
  "" 'next.extra :=
  #0 'longest.label.width :=
  #0 'last.extra.num :=
  #0 'number.label :=
}

FUNCTION {forward.pass}
{ last.label label =
    { last.extra.num #1 + 'last.extra.num :=
      last.extra.num int.to.chr$ 'extra.label :=
    }
    { "a" chr.to.int$ 'last.extra.num :=
      "" 'extra.label :=
      label 'last.label :=
    }
  if$
  number.label #1 + 'number.label :=
}

EXECUTE {initialize.longest.label}

ITERATE {forward.pass}

FUNCTION {begin.bib}
{ preamble$ empty$
    'skip$
    { preamble$ write$ newline$ }
  if$
  "\ifx\mcitethebibliography\mciteundefinedmacro"
  write$ newline$
  "  \PackageError"
%<rsc>  "{rsc.bst}"
%<angew>  "{angew.bst}"
  "{mciteplus.sty has not been loaded}" * *
  write$ newline$
  "  {This bibstyle requires the use of the"
  " mciteplus package.}" *
  write$ newline$
  "\fi"
  write$ newline$
  "\begin{mcitethebibliography}{"
  number.label int.to.str$  * "}" *
  write$ newline$
  "\providecommand{\natexlab}[1]{#1}"
  write$ newline$
  "\mciteSetBstSublistMode{f}"
  write$ newline$
  "\mciteSetBstMaxWidthForm{subitem}"
  write$ newline$
%<rsc>  "{(\emph{\alph{mcitesubitemcount}})}"
%<angew>  "{\alph{mcitesubitemcount})}"
  write$ newline$
  "\mciteSetBstSublistLabelBeginEnd"
  write$ newline$
  "{\mcitemaxwidthsubitemform\space}"
  write$ newline$
  "{\relax}{\relax}"
  write$ newline$
}

EXECUTE {begin.bib}

EXECUTE {init.state.consts}

ITERATE {call.type$}

FUNCTION {end.bib}
{ newline$
  "\end{mcitethebibliography}" write$ newline$
}

EXECUTE {end.bib}
%    \end{macrocode}
%\iffalse
%</bib>
%\fi
%
%\Finale
%\iffalse
%<*refs>
@ARTICLE{Abernethy2003,
  author = {Colin D. Abernethy and Gareth M. Codd and Mark D. Spicer
    and Michelle K. Taylor},
  title = {{A} highly stable {N}-heterocyclic carbene complex of
    trichloro-oxo-vanadium(\textsc{v}) displaying novel
    {C}l---{C}(carbene) bonding interactions},
  journal = {{J}. {A}m. {C}hem. {S}oc.},
  year = {2003},
  volume = {125},
  pages = {1128--1129},
  number = {5},
  doi = {10.1021/ja0276321},
}

@ARTICLE{Arduengo1992,
  author = {Arduengo, III, Anthony J. and H. V. Rasika Dias and
    Richard L. Harlow and Michael Kline},
  title = {{E}lectronic stabilization of nucleophilic carbenes},
  journal = {{J}.~{A}m.\ {C}hem.\ {S}oc.},
  year = {1992},
  volume = {114},
  pages = {5530--5534},
  number = {14},
  doi = {10.1021/ja00040a007},
}

@ARTICLE{Arduengo1994,
  author = {Arduengo, III, Anthony J. and Siegfried F. Gamper and
    Joseph C. Calabrese	and Fredric Davidson},
  title = {{L}ow-coordinate carbene complexes of nickel(0) and
    platinum(0)},
  journal = jacsat,
  year = {1994},
  volume = {116},
  pages = {4391--4394},
  number = {10},
  doi = {10.1021/ja00089a029},
}

@BOOK{Cotton1999,
  title = {{A}dvanced {I}norganic {C}hemistry},
  publisher = {Wiley},
  year = {1999},
  author = {Cotton, Frank Albert and Wilkinson, Geoffrery and
    Murillio, Carlos A. and Bochmann, Manfred},
  address = {Chichester},
  edition = {6},
}
%</refs>
%<*jawltxdoc>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{jawltxdoc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage[final]{listings,graphicx,microtype}
\usepackage[scaled=0.95]{helvet}
\usepackage[version=3]{mhchem}
\usepackage[osf]{mathpazo}
\usepackage{booktabs,array,url,courier,xspace,varioref}
\usepackage{upgreek,ifpdf,float,caption,longtable,babel}
\begingroup
  \@ifundefined{eTeXversion}
    {\aftergroup\@gobble}
    {\aftergroup\@firstofone}
\endgroup
  {\usepackage{etoolbox}}
\floatstyle{plaintop}
\restylefloat{table}
\labelformat{figure}{\figurename~#1}
\labelformat{table}{\tablename~#1}
\ifpdf
  \usepackage{embedfile}
  \embedfile[%
    stringmethod=escape,%
    mimetype=plain/text,%
    desc={LaTeX docstrip source archive for package `\jobname'}%
    ]{\jobname.dtx}
\fi
\IfFileExists{\jobname.sty}
  {\usepackage{\jobname}}{}
\usepackage[numbered]{hypdoc}
\setcounter{IndexColumns}{2}
\newlength\LaTeXwidth
\newlength\LaTeXoutdent
\newlength\LaTeXgap
\setlength\LaTeXgap{1em}
\setlength\LaTeXoutdent{-0.15\textwidth}
\newbox\lst@samplebox
\edef\LaTeXexamplefile{\jobname.tmp}
\lst@RequireAspects{writefile}
\lstnewenvironment{LaTeXexample}[1][example]{%
  \global\let\lst@intname\@empty
  \ifcsname LaTeXcode#1\endcsname
    \expandafter\let\expandafter\LaTeXcode
      \csname LaTeXcode#1\endcsname
    \expandafter\let\expandafter\LaTeXcodeend
      \csname LaTeXcode#1end\endcsname
  \else
    \PackageError{jawltxdoc}
      {Undefined example type `#1'}
      \@ehd
    \let\LaTeXcode\relax
    \let\LaTeXcodeend\relax
  \fi
  \LaTeXcode}
  {\lst@EndWriteFile
   \LaTeXcodeend}
\newcommand*{\LaTeXcodeexample}{%
  \setbox\lst@samplebox=\hbox\bgroup
  \LaTeXcodefloat}
\let\LaTeXcoderesultonly\LaTeXcodeexample
\newcommand*{\LaTeXcodeexampleend}{%
  \egroup
  \setlength\LaTeXwidth{\wd\lst@samplebox}%
  \begin{list}{}{%
    \setlength\itemindent{0pt}
    \setlength\leftmargin\LaTeXoutdent
    \setlength\rightmargin{0pt}}%
    \item
      \setlength\LaTeXoutdent{-0.15\textwidth}
      \begin{minipage}[c]{%
        \textwidth-\LaTeXwidth-\LaTeXoutdent-\LaTeXgap}
        \LaTeXcodefloatend
      \end{minipage}%
      \hfill
      \begin{minipage}[c]{\LaTeXwidth}%
        \hbox to\linewidth{\box\lst@samplebox\hss}%
      \end{minipage}%
  \end{list}}
\newcommand*{\LaTeXcodefloat}{%
  \setkeys{lst}{tabsize=4,gobble=3,breakindent=0pt,
    basicstyle=\small\ttfamily,basewidth=0.51em,
    keywordstyle=\color{blue}}%
  \lst@BeginAlsoWriteFile{\LaTeXexamplefile}}
\let\LaTeXcodenoexample\LaTeXcodefloat
\let\LaTeXcodenoexampleend\@empty
\newcommand*{\LaTeXcodefloatend}{%
  \MakePercentComment\catcode`\^^M=10\relax
  \small
  {\setkeys{lst}{SelectCharTable=\lst@ReplaceInput{\^\^I}%
    {\lst@ProcessTabulator}}%
    \leavevmode \input{\LaTeXexamplefile}}%
  \MakePercentIgnore}
\newcommand*{\LaTeXcoderesultonlyend}{\egroup\LaTeXcodefloatend}
\lstnewenvironment{BibTeXexample}{%
  \global\let\lst@intname\@empty
  \setbox\lst@samplebox=\hbox\bgroup
  \setkeys{lst}{tabsize=4,gobble=3,breakindent=0pt,
    basicstyle=\small\ttfamily,basewidth=0.51em,
    keywordstyle=\color{black}}
  \lst@BeginAlsoWriteFile{\LaTeXexamplefile}}
 {\lst@EndWriteFile
   \LaTeXcodeexampleend}
\newcommand*{\DescribeOption}{%
  \leavevmode\@bsphack\begingroup\MakePrivateLetters
  \Describe@Option}
\newcommand*{\Describe@Option}[1]{\endgroup
              \marginpar{\raggedleft\PrintDescribeEnv{#1}}%
              \SpecialOptionIndex{#1}\@esphack\ignorespaces}
\newcommand*{\SpecialOptionIndex}[1]{\@bsphack
    \index{#1\actualchar{\protect\ttfamily#1}
           (option)\encapchar usage}%
    \index{options:\levelchar#1\actualchar{\protect\ttfamily#1}%
      \encapchar usage}\@esphack}
\newcommand*{\indexopt}[1]{\DescribeOption{#1}\opt{#1}}
\newcommand*{\DescribeOptionInfo}[2]{%
  \DescribeOption{#1}%
  \opt{#1=\meta{#2}}\xspace}
\newcommand*{\ofixarg}[1]{%
  {\ttfamily[}%
  \ifmmode \expandafter \nfss@text \fi
  {%
    \meta@font@select
    \edef\meta@hyphen@restore{%
      \hyphenchar\the\font\the\hyphenchar\font}%
    \hyphenchar\font\m@ne
    \language\l@nohyphenation
    #1\/%
    \meta@hyphen@restore
    }%
    {\ttfamily]}}
\newcommand*{\pkg}[1]{\textsf{#1}}
\newcommand*{\currpkg}{\pkg{\jobname}\xspace}
\newcommand*{\opt}[1]{\texttt{#1}}
\newcommand*{\defaultopt}[1]{\opt{\textbf{#1}}}
\newcommand*{\file}[1]{\texttt{#1}}
\newcommand*{\ext}[1]{\file{.#1}}
\newcommand*{\latin}[1]{\emph{#1}}
\newcommand*{\etc}{%
  \@ifnextchar.
    {\latin{etc}}
    {\latin{etc}.\xspace}}
\newcommand*{\eg}{%
  \@ifnextchar.
    {\latin{e.g}}
    {\latin{e.g}.\xspace}}
\newcommand*{\ie}{%
  \@ifnextchar.
    {\latin{i.e}}
    {\latin{i.e}.\xspace}}
\newcommand*{\etal}{%
  \@ifnextchar.
    {\latin{et~al.}}
    {\latin{et~al}.\xspace}}
\newcommand*{\AMS}{{\protect\usefont{OMS}{cmsy}{m}{n}%
  A\kern-.1667em\lower.5ex\hbox{M}\kern-.125emS}}
\providecommand*{\eTeX}{\ensuremath{\varepsilon}-\TeX}
\DeclareRobustCommand*{\XeTeX}
  {X\kern-.125em\lower.5ex\hbox{\reflectbox{E}}\kern-.1667em\TeX}
\providecommand*{\CTAN}{\textsc{ctan}}
\@ifpackageloaded{etoolbox}
  {\patchcmd{\@addmarginpar}
    {\@latex@warning@no@line {Marginpar on page \thepage\space moved}}
    {\relax}{}{}}
  {}
\newcounter{argument}
\g@addto@macro\endmacro{\setcounter{argument}{0}}
\newcommand*\darg[1]{%
  \stepcounter{argument}%
  {\ttfamily\char`\#\theargument~:~}#1\par\noindent\ignorespaces}
\newcommand*\doarg[1]{%
  \stepcounter{argument}%
  {\ttfamily\makebox[0pt][r]{[}%
   \char`\#\theargument]:~}#1\par\noindent\ignorespaces}
%</jawltxdoc>
%\fi
